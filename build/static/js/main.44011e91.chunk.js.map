{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/PersonsDataTableRow.js","components/PersonsDataTable.js","components/Notification.js","enums/NotificationTypeEnum.js","App.js","index.js"],"names":["baseUrl","exportedMethods","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Filter","title","onChange","PersonForm","onSubmit","useState","newName","setNewName","newPhoneNumber","setNewPhoneNumber","resetFormFields","event","preventDefault","name","number","type","value","target","required","PersonsDataTableRow","person","onDelete","onClick","PersonsDataTable","persons","filter","toLowerCase","includes","map","p","Notification","notification","className","message","NotificationTypeEnum","Object","freeze","Success","Error","App","setPersons","setFilter","setNotification","useEffect","personService","createPerson","newPerson","concat","showPersonNotification","catch","error","console","log","updatePerson","personToUpdate","updatedPerson","updatedPersonList","setTimeout","hasConfirmedNumberUpdate","newPersonName","window","confirm","isExistingPerson","personName","some","x","find","n","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44011e91.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst exportedMethods = { getAll, create, update, remove }\r\n\r\nexport default exportedMethods;","import React from 'react';\r\n\r\nconst Filter = ({title, onChange}) => {\r\n    return <div> {title}: <input onChange={onChange} /> </div>\r\n  }\r\n\r\n  export default Filter;","import React, {useState} from \"react\";\r\n\r\nconst PersonForm = ({ onSubmit }) => {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\"); \r\n\r\n  const handlePhoneNumberChange = (event) => setNewPhoneNumber(event.target.value);\r\n  const handleNameChange = (event) => setNewName(event.target.value);\r\n\r\n  const onPersonFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      onSubmit({ name: newName, number: newPhoneNumber });\r\n      resetFormFields();\r\n  };\r\n\r\n  const resetFormFields = () => {\r\n    setNewName(\"\");\r\n    setNewPhoneNumber(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onPersonFormSubmit}>\r\n      <div>\r\n        name: <input type=\"text\" value={newName} onChange={handleNameChange} required />\r\n      </div>\r\n      <div>\r\n        number: <input type=\"text\" value={newPhoneNumber} onChange={handlePhoneNumberChange} required />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst PersonsDataTableRow = ({ person, onDelete }) => {\r\n  return (\r\n    <p>\r\n      {person.name} {person.number} {<button onClick={() => onDelete(person)}>delete</button>}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default PersonsDataTableRow;\r\n","import React from \"react\";\r\nimport PersonsDataTableRow from \"./PersonsDataTableRow\";\r\n\r\nconst PersonsDataTable = ({ persons, filter, onDelete }) => {\r\n  const hasSearchedTerm = (person) =>\r\n    filter ? person.name.toLowerCase().includes(filter) : true;\r\n\r\n  return (\r\n    persons &&\r\n    persons\r\n      .filter(hasSearchedTerm)\r\n      .map((p) => <PersonsDataTableRow key={p.id} person={p} onDelete={onDelete} />)\r\n  );\r\n};\r\n\r\nexport default PersonsDataTable;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n\r\n    if (notification === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={notification.type}>\r\n        {notification.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","const NotificationTypeEnum = Object.freeze({ \r\n    Success: \"success\", \r\n    Error: \"error\"\r\n}); \r\n \r\nexport default NotificationTypeEnum;","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport PersonsDataTable from './components/PersonsDataTable';\nimport Notification from './components/Notification';\nimport NotificationTypeEnum from './enums/NotificationTypeEnum';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => personService.getAll().then(response => setPersons(response)), [])\n\n  const handleFilterChange = (event) => setFilter(event.target.value.toLowerCase());\n\n  const handlePersonSubmit = (newPerson) => {\n    if (isExistingPerson(newPerson.name) && hasConfirmedNumberUpdate(newPerson.name)) {\n      let person = persons.find(p => p.name === newPerson.name);\n      let personToUpdate = { ...person, number: newPerson.number };\n      updatePerson(personToUpdate);\n    } else {\n      createPerson(newPerson);\n    }\n  };\n\n  const createPerson = (newPerson) => {\n    personService.create(newPerson).then((response) => {\n      setPersons(persons.concat(response));\n      showPersonNotification(NotificationTypeEnum.Success, `Added ${response.name}`);\n    })\n    .catch(error => {\n      showPersonNotification(NotificationTypeEnum.Error, error?.response?.data?.error);\n      console.log(error.response)\n    });\n  }\n\n  const updatePerson = (personToUpdate) => {\n    personService\n      .update(personToUpdate.id, personToUpdate)\n      .then((updatedPerson) => {\n        let updatedPersonList = persons.map(p => p.id === updatedPerson.id ? updatedPerson : p);\n        setPersons(updatedPersonList);\n        showPersonNotification(NotificationTypeEnum.Success, `Updated ${updatedPerson.name}`);\n      })\n      .catch(error => {\n        setPersons(persons.filter(p => p.id !== personToUpdate.id));\n        showPersonNotification(NotificationTypeEnum.Error, `Person '${personToUpdate.name}' was already removed from server`);\n      });\n  }\n\n  const deletePerson = (id) => {\n    personService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(n => n.id !== id));\n        });\n  }\n\n  const showPersonNotification = (type, message) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const hasConfirmedNumberUpdate = (newPersonName) => window.confirm(`${newPersonName} is already added to phonebook, replace the old number with a new one?`);\n\n  const isExistingPerson = (personName) => persons.some(x => x.name === personName);\n\n  const onDelete = (person) => {\n    if(window.confirm(`Delete ${person.name} ?`)){\n      deletePerson(person.id);\n    }\n  } \n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter \n        title={\"filter shown with\"} \n        onChange={handleFilterChange} \n      />\n      <h2>Add a new</h2>\n      <PersonForm onSubmit={handlePersonSubmit} />\n      <h2>Numbers</h2>\n      <PersonsDataTable\n        persons={persons}\n        filter={filter}\n        onDelete={onDelete}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}